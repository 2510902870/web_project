<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper  namespace="com.itany.netClass.dao.UserFontDao">
	<sql id="userColumn">
			id,
			login_name,
			nickname,
			password,
			role,
			email,
			date_format(login_date, '%Y-%m-%d') "login_date",
			create_date,
			status
	</sql>
	
	<insert id="registUser" parameterType="User" >
				insert into t_user
				(login_name,nickname,password,role,email,create_date,status)
				values
				(#{username},#{nickname},#{password},#{role},#{email},#{createDate},#{flag})
	</insert>
	
		<resultMap type="User" id="UserMap">
		<id property="id" column="id" />
		<result property="username" column="login_name" />
		<result property="nickname" column="nickname" />
		<result property="password" column="password" />
		<result property="role" column="role" />
		<result property="email" column="email" />
		<result property="loginDate" column="login_date" />
		<result property="createDate" column="create_date" />
		<result property="flag" column="status" />
	</resultMap>
	
	<select id="selectByUsername" resultMap="UserMap">
			select  <include refid="userColumn"></include>
			from t_user
			where login_name=#{0}
	</select>
	
	<select id="selectByUsernameAndPwd" resultMap="UserMap">
			select  <include refid="userColumn"></include>
			from t_user
			where login_name=#{0}
			and password=#{1}
	</select>

	<select id="login" resultMap="UserMap">
			select  <include refid="userColumn"></include>
			from t_user
			where login_name=#{0} and password=#{1}
	</select>
	
	<update id="modifyUserMsg">
			update t_user 
			set password=#{1},
			nickname=#{2},
			email=#{3} 
			where 
			login_name=#{0}
	</update>
	
	<update id="qiandao">
			update t_gold_points 
			set 
			point_count=point_count+5,
			create_date=#{1}
			where user_id=#{0}
	</update>
	
	<update id="insertLoginDate">
			update t_user 
			set 
			login_date=#{1}
			where id=#{0}
	</update>
	
	
	<resultMap type="CourseType" id="courseTypeMap">
		<id property="id" column="p1Id" />
		<result property="typeName" column="p1Name" />
		<result property="parentId" column="p1ParentId" />
		<result property="status" column="p1Status" />
		<collection property="children" javaType="CourseType"
			column="p1ParentId">
			<id property="id" column="p2Id" />
			<result property="typeName" column="p2Name" />
			<result property="parentId" column="p2ParentId" />
			<result property="status" column="p2Status" />
			<collection property="children" javaType="CourseType"
				column="p2ParentId">
				<id property="id" column="p3Id" />
				<result property="typeName" column="p3Name" />
				<result property="parentId" column="p3ParentId" />
				<result property="status" column="p3Status" />
			</collection>
		</collection>
	</resultMap>

	<select id="selectTypes" resultMap="courseTypeMap">
		select
		p1.id p1Id,p1.type_name
		p1Name,p1.status p1Status,p1.parent_id p1ParentId,
		p2.id
		p2Id,p2.type_name p2Name,p2.status p2Status,p2.parent_id
		p2ParentId,
		p3.id p3Id,p3.type_name p3Name,p3.status p3Status,p3.parent_id
		p3ParentId
		from t_course_type p1
		left join t_course_type p2 on
		p2.parent_id =
		p1.id
		left join t_course_type p3 on p3.parent_id = p2.id
		where
		p1.parent_id is null
	</select>
	
	<sql id="courseColum">
			id,
			course_name,
			course_info,
			author,
			cover_image_url,
			create_date,
			click_number,
			status,
			recommendation_grade,
			course_type_id
	</sql>
	
	<select id="findFourCourse" resultType="course">
			select   <include refid="courseColum"></include>
			from t_course 
			where course_type_id=#{0} 
			order by click_number desc limit 4;
	</select>
	
	<select id="selectCourseByClickNumber" resultType="course">
			select   <include refid="courseColum"></include>
			from t_course 
			order by click_number
	</select>

</mapper>
